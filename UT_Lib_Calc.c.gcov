        -:    0:Source:UT_Lib_Calc.c
        -:    0:Graph:UT_Lib_Calc.gcno
        -:    0:Data:UT_Lib_Calc.gcda
        -:    0:Runs:6
        -:    0:Programs:1
        -:    1:/** ==================================================================================================================*\
        -:    2:  @file UT_Lib_Calc.c
        -:    3:
        -:    4:  @brief Testy jednostkowe do Lib_Calc
        -:    5:\*====================================================================================================================*/
        -:    6:
        -:    7:#include "acutest.h"
        -:    8:#include "Std_Types.h"
        -:    9:
        -:   10:#include "Lib_Calc.c"   /* To nie pomyłka - taki include eksponuje zmienne statyczne dla testów */
        -:   11:
        -:   12:#define MAX32   (2147483647L)
        -:   13:#define MIN32   (-2147483648L)
        -:   14:
        -:   15:#define DIV_POS_BY_ZERO_RESULT   (0x7FFFFFFF)
        -:   16:#define DIV_NEG_BY_ZERO_RESULT   (0x80000000)
        -:   17:#define DIV_ZERO_BY_ZERO_RESULT   (0x00000000)
        -:   18:
        -:   19:/**
        -:   20:  @brief Test dodawania
        -:   21:
        -:   22:  Funkcja testująca dodawanie w bibliotece. Funkcje testowe acutest nie mogą zwracać ani przyjmować danych!
        -:   23:*/
        1:   24:void Test_Of_Lib_Calc_Add(void)
        -:   25:{
        -:   26:    sint32 result;
        -:   27:    Std_ReturnType retv;
        -:   28:
        1:   29:    retv = Lib_Calc_Add(0L, 0L, &result);
        -:   30:
        1:   31:    TEST_CHECK(result == 0);       /* Test przejdzie jeżeli wyrażenie w nawiasach jest prawdziwe */
        1:   32:    TEST_CHECK(retv == E_OK);
        -:   33:
        1:   34:    retv = Lib_Calc_Add(1L, -1L, &result);
        -:   35:
        1:   36:    TEST_CHECK(result == 0);
        1:   37:    TEST_CHECK(retv == E_OK);
        -:   38:
        -:   39:    /* TUTAJ DOPISZ WIĘCEJ TESTÓW */
        1:   40:}
        -:   41:
        -:   42:
        -:   43:/**
        -:   44:  @brief Test odejmowania
        -:   45:
        -:   46:  Funkcja testująca odejmowanie w bibliotece.
        -:   47:*/
        1:   48:void Test_Of_Lib_Calc_Sub(void)
        -:   49:{
        -:   50:    sint32 result;
        -:   51:    Std_ReturnType retv;
        -:   52:
        1:   53:    retv = Lib_Calc_Sub(0L, 0L, &result);
        -:   54:
        1:   55:    TEST_CHECK(result == 0);
        1:   56:    TEST_CHECK(retv == E_OK);
        -:   57:
        1:   58:    retv = Lib_Calc_Sub(1L, -1L, &result);
        -:   59:
        1:   60:    TEST_CHECK(result == 2L);
        1:   61:    TEST_CHECK(retv == E_OK);
        -:   62:
        -:   63:    /* TUTAJ DOPISZ WIĘCEJ TESTÓW */
        1:   64:}
        -:   65:
        -:   66:
        -:   67:/**
        -:   68:  @brief Test mnożenia
        -:   69:
        -:   70:  Funkcja testująca mnożenie w bibliotece.
        -:   71:*/
        1:   72:void Test_Of_Lib_Calc_Mul(void)
        -:   73:{
        -:   74:    sint32 result;
        -:   75:    Std_ReturnType retv;
        -:   76:
        1:   77:    retv = Lib_Calc_Mul(0L, 0L, &result);
        -:   78:
        1:   79:    TEST_CHECK(result == 0);
        1:   80:    TEST_CHECK(retv == E_OK);
        -:   81:
        1:   82:    retv = Lib_Calc_Mul(1L, -1L, &result);
        -:   83:
        1:   84:    TEST_CHECK(result == -1L);
        1:   85:    TEST_CHECK(retv == E_OK);
        -:   86:
        -:   87:    /* TUTAJ DOPISZ WIĘCEJ TESTÓW */
        1:   88:}
        -:   89:
        -:   90:
        -:   91:/**
        -:   92:  @brief Test dzielenia
        -:   93:
        -:   94:  Funkcja testująca dzielenie w bibliotece.
        -:   95:*/
        1:   96:void Test_Of_Lib_Calc_Div(void)
        -:   97:{
        -:   98:    sint32 result;
        -:   99:    Std_ReturnType retv;
        -:  100:
        1:  101:    retv = Lib_Calc_Div(0L, 0L, &result);
        -:  102:
        1:  103:    TEST_CHECK(result == DIV_ZERO_BY_ZERO_RESULT);
        1:  104:    TEST_CHECK(retv == E_NOT_OK);
        -:  105:
        1:  106:    retv = Lib_Calc_Div(1L, 0L, &result);
        -:  107:
        1:  108:    TEST_CHECK(result == DIV_POS_BY_ZERO_RESULT);  
        1:  109:    TEST_CHECK(retv == E_NOT_OK);
        -:  110:
        1:  111:    retv = Lib_Calc_Div(-1L, 0L, &result);
        -:  112:
        1:  113:    TEST_CHECK(result == DIV_NEG_BY_ZERO_RESULT);  
        1:  114:    TEST_CHECK(retv == E_NOT_OK);
        -:  115:
        1:  116:    retv = Lib_Calc_Div(1L, -1L, &result);
        -:  117:
        1:  118:    TEST_CHECK(result == -1L);
        1:  119:    TEST_CHECK(retv == E_OK);
        1:  120:}
        -:  121:
        -:  122:
        -:  123:/**
        -:  124:  @brief Test zapisu i odczytu z pamięci
        -:  125:
        -:  126:  Funkcja testująca zapisywanie i odczytywanie pamięci w bibliotece.
        -:  127:*/
        1:  128:void Test_Of_Lib_Calc_MemS_MemR(void)
        -:  129:{
        -:  130:    sint32 retv;
        -:  131:
        1:  132:    Lib_Calc_MemS(0L);
        1:  133:    retv = Lib_Calc_MemR();
        -:  134:
        1:  135:    TEST_CHECK(retv == 0L);
        -:  136:
        1:  137:    Lib_Calc_MemS(MAX32);
        1:  138:    retv = Lib_Calc_MemR();
        -:  139:
        1:  140:    TEST_CHECK(retv == MAX32);
        -:  141:
        1:  142:    Lib_Calc_MemS(MIN32);
        1:  143:    retv = Lib_Calc_MemR();
        -:  144:
        1:  145:    TEST_CHECK(retv == MIN32);
        1:  146:}
        -:  147:
        -:  148:
        -:  149:
        -:  150:
        -:  151:/*
        -:  152:  Lista testów - wpisz tutaj wszystkie funkcje które mają być wykonane jako testy.
        -:  153:*/
        -:  154:TEST_LIST = {
        -:  155:    { "Test of Lib_Calc_Add", Test_Of_Lib_Calc_Add },   /* Format to { "nazwa testu", nazwa_funkcji } */
        -:  156:    { "Test of Lib_Calc_Sub", Test_Of_Lib_Calc_Sub },
        -:  157:    { "Test of Lib_Calc_Mul", Test_Of_Lib_Calc_Mul },
        -:  158:    { "Test of Lib_Calc_Div", Test_Of_Lib_Calc_Div },
        -:  159:    { "Test of Lib_Calc_MemS_MemR", Test_Of_Lib_Calc_MemS_MemR },
        -:  160:    { NULL, NULL }                                      /* To musi być na końcu */
        -:  161:};
        -:  162:
